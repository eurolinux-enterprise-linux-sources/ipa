From 2635b0466b9e7195750f699e311c2ce9d4c016be Mon Sep 17 00:00:00 2001
From: Jan Cholasta <jcholast@redhat.com>
Date: Fri, 2 Aug 2013 11:22:40 +0200
Subject: [PATCH] Use LDAP modify operation directly to add/remove group
 members.

This prevents getting full member list from LDAP and putting it back later.

https://fedorahosted.org/freeipa/ticket/3706
---
 ipaserver/plugins/ldap2.py | 35 ++++++++++++++---------------------
 1 file changed, 14 insertions(+), 21 deletions(-)

diff --git a/ipaserver/plugins/ldap2.py b/ipaserver/plugins/ldap2.py
index 731df1aa4557a39508eb23c0161f25ed659d514a..f7c52927f2416f5fcb3c07db8d1953b4b3df8a5e 100644
--- a/ipaserver/plugins/ldap2.py
+++ b/ipaserver/plugins/ldap2.py
@@ -1464,26 +1464,22 @@ class ldap2(CrudBackend):
 
         self.debug("add_entry_to_group: dn=%s group_dn=%s member_attr=%s", dn, group_dn, member_attr)
         # check if the entry exists
-        (dn, entry_attrs) = self.get_entry(dn, ['objectclass'])
+        (dn, entry_attrs) = self.get_entry(dn, [''])
 
-        # get group entry
-        (group_dn, group_entry_attrs) = self.get_entry(group_dn, [member_attr])
-
-        self.debug("add_entry_to_group: group_entry_attrs=%s", group_entry_attrs)
         # check if we're not trying to add group into itself
         if dn == group_dn and not allow_same:
             raise errors.SameGroupError()
 
         # add dn to group entry's `member_attr` attribute
-        members = group_entry_attrs.get(member_attr, [])
-        members.append(dn)
-        group_entry_attrs[member_attr] = members
+        modlist = [(_ldap.MOD_ADD, member_attr, [dn])]
 
         # update group entry
         try:
-            self.update_entry(group_dn, group_entry_attrs)
-        except errors.EmptyModlist:
+            self.conn.modify_s(group_dn, modlist)
+        except _ldap.TYPE_OR_VALUE_EXISTS:
             raise errors.AlreadyGroupMember()
+        except _ldap.LDAPError, e:
+            self.handle_errors(e)
 
     def remove_entry_from_group(self, dn, group_dn, member_attr='member'):
         """Remove entry from group."""
@@ -1492,21 +1488,18 @@ class ldap2(CrudBackend):
         assert isinstance(group_dn, DN)
 
         self.debug("remove_entry_from_group: dn=%s group_dn=%s member_attr=%s", dn, group_dn, member_attr)
-        # get group entry
-        (group_dn, group_entry_attrs) = self.get_entry(group_dn, [member_attr])
 
-        self.debug("remove_entry_from_group: group_entry_attrs=%s", group_entry_attrs)
         # remove dn from group entry's `member_attr` attribute
-        members = group_entry_attrs.get(member_attr, [])
-        assert all([isinstance(x, DN) for x in members])
-        try:
-            members.remove(dn)
-        except ValueError:
-            raise errors.NotGroupMember()
-        group_entry_attrs[member_attr] = members
+        modlist = [(_ldap.MOD_DELETE, member_attr, [dn])]
 
         # update group entry
-        self.update_entry(group_dn, group_entry_attrs)
+        try:
+            self.conn.modify_s(group_dn, modlist)
+        except _ldap.LDAPError, e:
+            try:
+                self.handle_errors(e)
+            except errors.MidairCollision:
+                raise errors.NotGroupMember()
 
     def get_members(self, group_dn, members, attr_list=[], membertype=MEMBERS_ALL, time_limit=None, size_limit=None, normalize=True):
         """Do a memberOf search of groupdn and return the attributes in
-- 
1.8.3.1

