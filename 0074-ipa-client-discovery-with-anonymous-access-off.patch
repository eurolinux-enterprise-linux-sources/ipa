From 2e1b2b660468ba6860feefd57099dd348d76dc1c Mon Sep 17 00:00:00 2001
From: Martin Kosek <mkosek@redhat.com>
Date: Tue, 19 Mar 2013 09:18:29 +0100
Subject: [PATCH] ipa-client discovery with anonymous access off

When RootDSE could be read (nsslapd-allow-anonymous-access set to
"rootdse"), autodiscovery module failed to report success to the
client installer.

Remove faulty "verified_servers" flag from autodiscovery module as
it has no point since we consider both scenarios (IPA server with
anonymous access on and unknown LDAP server with anonymous access
off) as success.

https://fedorahosted.org/freeipa/ticket/3519
---
 ipa-client/ipaclient/ipadiscovery.py | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/ipa-client/ipaclient/ipadiscovery.py b/ipa-client/ipaclient/ipadiscovery.py
index 7fc6aae88672e15a6bf3068ef8769e4cc80184a4..c0f06bb28fa06f534e425e07de814f89728c6370 100644
--- a/ipa-client/ipaclient/ipadiscovery.py
+++ b/ipa-client/ipaclient/ipadiscovery.py
@@ -236,7 +236,6 @@ class IPADiscovery(object):
         ldapaccess = True
         root_logger.debug("[LDAP server check]")
         valid_servers = []
-        verified_servers = False # is at least one server valid?
         for server in servers:
             root_logger.debug('Verifying that %s (realm %s) is an IPA server',
                 server, self.realm)
@@ -251,7 +250,6 @@ class IPADiscovery(object):
                 valid_servers.insert(0, server)
                 # verified, we actually talked to the remote server and it
                 # is definetely an IPA server
-                verified_servers = True
                 if autodiscovered:
                     # No need to keep verifying servers if we discovered them
                     # via DNS
@@ -284,14 +282,12 @@ class IPADiscovery(object):
             self.realm_source = 'Assumed same as domain'
             root_logger.debug(
                 "Assuming realm is the same as domain: %s", self.realm)
-            verified_servers = True
 
         if not ldapaccess and self.basedn is None:
             # Generate suffix from realm
             self.basedn = realm_to_suffix(self.realm)
             self.basedn_source = 'Generated from Kerberos realm'
             root_logger.debug("Generated basedn from realm: %s" % self.basedn)
-            verified_servers = True
 
         root_logger.debug(
             "Discovery result: %s; server=%s, domain=%s, kdc=%s, basedn=%s",
@@ -303,7 +299,7 @@ class IPADiscovery(object):
 
         # If we have any servers left then override the last return value
         # to indicate success.
-        if verified_servers:
+        if valid_servers:
             self.server = servers[0]
             ldapret[0] = 0
 
-- 
1.8.1.4

