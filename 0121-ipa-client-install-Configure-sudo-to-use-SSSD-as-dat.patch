From a70c15b32b1ce48deb772f38336413896a2f9525 Mon Sep 17 00:00:00 2001
From: Tomas Babej <tbabej@redhat.com>
Date: Thu, 19 Jun 2014 15:08:19 +0200
Subject: [PATCH 121/121] ipa-client-install: Configure sudo to use SSSD as
 data source

Makes ipa-client-install configure SSSD as the data provider
for the sudo service by default. This behaviour can be disabled
by using --no-sudo flag.

https://fedorahosted.org/freeipa/ticket/3358

Reviewed-By: Jakub Hrozek <jhrozek@redhat.com>
Reviewed-By: Alexander Bokovoy <abokovoy@redhat.com>
---
 ipa-client/ipa-install/ipa-client-install | 82 +++++++++++++++++++++++++++++++
 ipa-client/man/ipa-client-install.1       |  3 ++
 2 files changed, 85 insertions(+)

diff --git a/ipa-client/ipa-install/ipa-client-install b/ipa-client/ipa-install/ipa-client-install
index 429ae45326fef6813054174776963a74b8bf2a0e..db007e2fe103ea79d5b78bc280bc519c955c9c43 100755
--- a/ipa-client/ipa-install/ipa-client-install
+++ b/ipa-client/ipa-install/ipa-client-install
@@ -71,6 +71,8 @@ CLIENT_UNINSTALL_ERROR = 4 # error after restoring files/state
 
 client_nss_nickname_format = 'IPA Machine Certificate - %s'
 
+NSSWITCH_CONF = '/etc/nsswitch.conf'
+
 def parse_options():
     def validate_ca_cert_file_option(option, opt, value, parser):
         if not os.path.exists(value):
@@ -131,6 +133,9 @@ def parse_options():
                       help="do not configure OpenSSH client")
     basic_group.add_option("--no-sshd", dest="conf_sshd", default=True, action="store_false",
                       help="do not configure OpenSSH server")
+    basic_group.add_option("--no-sudo", dest="conf_sudo", default=True,
+                      action="store_false",
+                      help="do not configure SSSD as data source for sudo")
     basic_group.add_option("--no-dns-sshfp", dest="create_sshfp", default=True, action="store_false",
                       help="do not automatically create DNS SSHFP records")
     basic_group.add_option("--noac", dest="no_ac", default=False, action="store_true",
@@ -301,6 +306,69 @@ def is_ipa_client_installed(on_master=False):
 
     return installed
 
+def configure_nsswitch_database(fstore, database, services, preserve=True,
+                                append=True, default_value=None):
+    """
+    Edits the specified nsswitch.conf database (e.g. passwd, group, sudoers)
+    to use the specified service(s).
+
+    Arguments:
+        fstore - FileStore to backup the nsswitch.conf
+        database - database configuration that should be ammended, e.g 'sudoers'
+        service - list of services that should be added, e.g. ['sss']
+        preserve - if True, the already configured services will be preserved
+
+    The next arguments modify the behaviour if preserve=True:
+        append - if True, the services will be appended, if False, prepended
+        default_value - list of services that are considered as default (if
+                        the database is not mentioned in nsswitch.conf), e.g.
+                        ['files']
+    """
+
+    # Backup the original version of nsswitch.conf, we're going to edit it now
+    if not fstore.has_file(NSSWITCH_CONF):
+        fstore.backup_file(NSSWITCH_CONF)
+
+    conf = ipaclient.ipachangeconf.IPAChangeConf("IPA Installer")
+    conf.setOptionAssignment(':')
+
+    if preserve:
+        # Read the existing configuration
+        with open('/etc/nsswitch.conf', 'r') as f:
+            opts = conf.parse(f)
+            raw_database_entry = conf.findOpts(opts, 'option', database)[1]
+
+            if not raw_database_entry:
+                # If there is no database entry, database is not present in
+                # the nsswitch.conf. Set the list of services to the
+                # default list, if passed.
+                configured_services = ' '.join(default_value or [])
+            else:
+                configured_services = raw_database_entry['value'].strip()
+
+        if append:
+            new_services = ' ' + configured_services + ' ' + ' '.join(services)
+        else:
+            new_services = ' ' +  ' '.join(services) + ' ' + configured_services
+
+    else:
+        # Preserve not set, let's rewrite existing configuration
+        new_services = ' ' + ' '.join(services)
+
+    # Set new services as sources for database
+    opts = [{'name': database,
+             'type':'option',
+             'action':'set',
+             'value': new_services
+            },
+            {'name':'empty',
+             'type':'empty'
+            }]
+
+    conf.changeConf(NSSWITCH_CONF, opts)
+    root_logger.info("Configured %s in %s" % (database, NSSWITCH_CONF))
+
+
 def uninstall(options, env):
 
     if not is_ipa_client_installed():
@@ -1031,6 +1099,20 @@ def configure_sssd_conf(fstore, cli_realm, cli_domain, cli_server, options, clie
 
         sssdconfig.activate_service('ssh')
 
+    if options.conf_sudo:
+        # Activate the service in the SSSD config
+        try:
+            sssdconfig.new_service('sudo')
+        except SSSDConfig.ServiceAlreadyExists:
+            pass
+        except SSSDConfig.ServiceNotRecognizedError:
+            root_logger.error("Unable to activate the SUDO service in "
+                              "SSSD config.")
+
+        sssdconfig.activate_service('sudo')
+        configure_nsswitch_database(fstore, 'sudoers', ['sss'],
+                                    default_value=['files'])
+
     domain.add_provider('ipa', 'id')
 
     #add discovery domain if client domain different from server domain
diff --git a/ipa-client/man/ipa-client-install.1 b/ipa-client/man/ipa-client-install.1
index 29cf2868e6788b79ff67048a010ed806d3962869..f801d8ad89e803978a29309c4dfdf89972299375 100644
--- a/ipa-client/man/ipa-client-install.1
+++ b/ipa-client/man/ipa-client-install.1
@@ -89,6 +89,9 @@ Do not configure OpenSSH client.
 \fB\-\-no\-sshd\fR
 Do not configure OpenSSH server.
 .TP
+\fB\-\-no\-sudo\fR
+Do not configure SSSD as a data source for sudo.
+.TP
 \fB\-\-no\-dns\-sshfp\fR
 Do not automatically create DNS SSHFP records.
 .TP
-- 
1.9.3

